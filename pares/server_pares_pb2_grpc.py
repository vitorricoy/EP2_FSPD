# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import server_pares_pb2 as server__pares__pb2


class ServerParesStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Insere = channel.unary_unary(
                '/ServerPares/Insere',
                request_serializer=server__pares__pb2.RequisicaoInsercao.SerializeToString,
                response_deserializer=server__pares__pb2.RespostaInsercao.FromString,
                )
        self.Consulta = channel.unary_unary(
                '/ServerPares/Consulta',
                request_serializer=server__pares__pb2.RequisicaoConsulta.SerializeToString,
                response_deserializer=server__pares__pb2.RespostaConsulta.FromString,
                )
        self.Ativa = channel.unary_unary(
                '/ServerPares/Ativa',
                request_serializer=server__pares__pb2.RequisicaoAtivacao.SerializeToString,
                response_deserializer=server__pares__pb2.RespostaAtivacao.FromString,
                )
        self.Termina = channel.unary_unary(
                '/ServerPares/Termina',
                request_serializer=server__pares__pb2.RequisicaoTermino.SerializeToString,
                response_deserializer=server__pares__pb2.RespostaTermino.FromString,
                )


class ServerParesServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Insere(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Consulta(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Ativa(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Termina(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ServerParesServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Insere': grpc.unary_unary_rpc_method_handler(
                    servicer.Insere,
                    request_deserializer=server__pares__pb2.RequisicaoInsercao.FromString,
                    response_serializer=server__pares__pb2.RespostaInsercao.SerializeToString,
            ),
            'Consulta': grpc.unary_unary_rpc_method_handler(
                    servicer.Consulta,
                    request_deserializer=server__pares__pb2.RequisicaoConsulta.FromString,
                    response_serializer=server__pares__pb2.RespostaConsulta.SerializeToString,
            ),
            'Ativa': grpc.unary_unary_rpc_method_handler(
                    servicer.Ativa,
                    request_deserializer=server__pares__pb2.RequisicaoAtivacao.FromString,
                    response_serializer=server__pares__pb2.RespostaAtivacao.SerializeToString,
            ),
            'Termina': grpc.unary_unary_rpc_method_handler(
                    servicer.Termina,
                    request_deserializer=server__pares__pb2.RequisicaoTermino.FromString,
                    response_serializer=server__pares__pb2.RespostaTermino.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ServerPares', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ServerPares(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Insere(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ServerPares/Insere',
            server__pares__pb2.RequisicaoInsercao.SerializeToString,
            server__pares__pb2.RespostaInsercao.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Consulta(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ServerPares/Consulta',
            server__pares__pb2.RequisicaoConsulta.SerializeToString,
            server__pares__pb2.RespostaConsulta.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Ativa(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ServerPares/Ativa',
            server__pares__pb2.RequisicaoAtivacao.SerializeToString,
            server__pares__pb2.RespostaAtivacao.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Termina(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ServerPares/Termina',
            server__pares__pb2.RequisicaoTermino.SerializeToString,
            server__pares__pb2.RespostaTermino.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
